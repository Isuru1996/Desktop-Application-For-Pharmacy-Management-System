/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import codes.DBConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Isuru Gayan
 */
public class transaction extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
    public transaction() {
        initComponents();
        conn=DBConnect.dbconnect();
        tableLoad();
        
    }
    
    public void tableLoad()
    {
        try {
            String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) order by i.date,c.fname";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"table load fail");
        }
        try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) order by i.date,c.fname";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Get Total failed");
        }
    }
    
    public void tableSum(ResultSet a)
    {
        float sum=0;
        try {
            while(a.next())
            {
                sum=sum+Float.parseFloat(a.getString(5));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Sum calculate fail");
        }
        total.setText(String.valueOf(sum));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        time = new javax.swing.JComboBox();
        cashier = new javax.swing.JComboBox();
        back = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        total = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        go = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("transaction");
        setMinimumSize(new java.awt.Dimension(1200, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel1.setText("Transaction");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 240, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Time");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Cashier");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 110, -1, -1));

        time.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        time.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Today", "This Month", "This Year" }));
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });
        jPanel1.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, 140, 30));

        cashier.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cashier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Cashier1", "Cashier2" }));
        cashier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashierActionPerformed(evt);
            }
        });
        jPanel1.add(cashier, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 110, 150, 30));

        back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 730, -1, -1));

        cancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel1.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 730, -1, -1));

        total.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        total.setForeground(new java.awt.Color(0, 0, 204));
        jPanel1.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 710, 130, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel4.setText("Total Rs");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 710, 130, 30));

        go.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        go.setText("Go");
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goActionPerformed(evt);
            }
        });
        jPanel1.add(go, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 90, 80, 60));

        table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 690, 490));

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Isuru Gayan\\Documents\\NetBeansProjects\\project5\\images\\transaction.jpg")); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 800));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 800));

        setSize(new java.awt.Dimension(1218, 847));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        int check=JOptionPane.showConfirmDialog(null,"Are you sure");
        if(check==0)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_cancelActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeActionPerformed

    private void cashierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cashierActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        adminMain obj=new adminMain();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goActionPerformed
        if((time.getSelectedIndex()==0)&&(cashier.getSelectedIndex()==1))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where c.fname='Isuru' order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where c.fname='Isuru' order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==0)&&(cashier.getSelectedIndex()==2))
        {
             try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where c.fname='Nethmi' order by i.date,c.fname";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where c.fname='Nethmi' order by i.date,c.fname";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==1)&&(cashier.getSelectedIndex()==0))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where day(i.date)=day(current_date()) order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where day(i.date)=day(current_date()) order by i.date,c.fname "; 
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==1)&&(cashier.getSelectedIndex()==1))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where day(i.date)=day(current_date()) and c.fname='Isuru' order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where day(i.date)=day(current_date()) and c.fname='Isuru' order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==1)&&(cashier.getSelectedIndex()==2))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where day(i.date)=day(current_date()) and c.fname='Nethmi' order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where day(i.date)=day(current_date()) and c.fname='Nethmi' order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==2)&&(cashier.getSelectedIndex()==0))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where month(i.date)=month(current_date()) order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where month(i.date)=month(current_date()) order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==2)&&(cashier.getSelectedIndex()==1))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where month(i.date)=month(current_date()) and c.fname='Isuru' order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where month(i.date)=month(current_date()) and c.fname='Isuru' order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==2)&&(cashier.getSelectedIndex()==2))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where month(i.date)=month(current_date()) and c.fname='Nethmi' order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where month(i.date)=month(current_date()) and c.fname='Nethmi' order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==3)&&(cashier.getSelectedIndex()==0))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where year(i.date)=year(current_date()) order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where year(i.date)=year(current_date()) order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==3)&&(cashier.getSelectedIndex()==1))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where year(i.date)=year(current_date()) and c.fname='Isuru' order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where year(i.date)=year(current_date()) and c.fname='Isuru' order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
        else if((time.getSelectedIndex()==3)&&(cashier.getSelectedIndex()==2))
        {
            try {
                String sql="select c.fname,t.invoice_id,t.medicine_id,t.quantity,t.price,i.date from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where year(i.date)=year(current_date()) and c.fname='Nethmi' order by i.date,c.fname ";
                pst=conn.prepareStatement(sql);
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"table load fail");
            }
            try {
            String sql="select sum(t.price) from transaction t join invoice i using(invoice_id) join cashiers c using(cashier_id) where year(i.date)=year(current_date()) and c.fname='Nethmi' order by i.date,c.fname ";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next())
            {
                total.setText(rs.getString(1));
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Get Total failed");
            }
        }
    }//GEN-LAST:event_goActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox cashier;
    private javax.swing.JButton go;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JComboBox time;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
